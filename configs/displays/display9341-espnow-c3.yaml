# ========= ILI9341 显示屏（SPI）- ESP32-C3内存优化版本 =========

spi:
  id: spi_bus_c3
  clk_pin: GPIO2 
  mosi_pin: GPIO3
  miso_pin: GPIO10

# 优化字体配置 - 减少内存使用  
font:
  - file: "../../resources/static/NotoSansSC-Regular.ttf"
    id: font_xs
    size: 12
    bpp: 1  # 单色位图减少内存
    glyphs: "0123456789.%°C℃hPa :/-"
  - file: "../../resources/static/NotoSansSC-Regular.ttf"
    id: font_s  
    size: 16
    bpp: 1  # 单色位图减少内存
    glyphs: "温度湿气压传感器数据环境监测在线离ESP-NOW更新秒前已过期"
  - file: "../../resources/static/NotoSansSC-Regular.ttf"
    id: font_m
    size: 18
    bpp: 1  # 改为单色位图
    glyphs: "0123456789.%°C℃hPa温度湿气压 :/-"

# output:
#   - platform: ledc
#     pin: GPIO4   
#     id: lcd_bl_out
#     frequency: 5000 Hz


# light:
#   - platform: monochromatic
#     name: "LCD Backlight"
#     id: lcd_backlight
#     output: lcd_bl_out
#     default_transition_length: 0.5s
#     restore_mode: RESTORE_DEFAULT_ON

display:
  - platform: ili9xxx
    model: TFT 2.4
    spi_id: spi_bus_c3
    cs_pin: GPIO7
    dc_pin: GPIO5
    reset_pin: GPIO6
    rotation: 0
    invert_colors: false
    data_rate: 10MHz      # 降低SPI时钟，提升稳定性（ESP32-C3）
    update_interval: 3s   # 进一步降低刷新频率
    lambda: |-
      it.fill(Color::BLACK);
      
      // 简化显示 - 最小内存使用
      int y = 10;
      
      // 标题
      it.print(10, y, id(font_s), Color::WHITE, "环境监测");
      y += 30;
      
      // ESP-NOW状态
      bool fresh = (millis() - id(last_update_time)) < 60000;
      it.printf(10, y, id(font_xs), fresh ? Color(0,255,0) : Color(255,0,0), 
                "ESP-NOW: %s", fresh ? "在线" : "离线");
      y += 25;
      
      // 传感器数据 - 简化显示
      if (id(espnow_temperature).has_state()) {
        it.printf(10, y, id(font_m), Color::WHITE, "T: %.1f°C", id(espnow_temperature).state);
      } else {
        it.print(10, y, id(font_m), Color(255,0,0), "T: --");
      }
      y += 25;
      
      if (id(espnow_humidity).has_state()) {
        it.printf(10, y, id(font_m), Color::WHITE, "H: %.1f%%", id(espnow_humidity).state);
      } else {
        it.print(10, y, id(font_m), Color(255,0,0), "H: --");
      }
      y += 25;
      
      if (id(espnow_pressure).has_state()) {
        it.printf(10, y, id(font_m), Color::WHITE, "P: %.0fhPa", id(espnow_pressure).state);
      } else {
        it.print(10, y, id(font_m), Color(255,0,0), "P: --");
      }

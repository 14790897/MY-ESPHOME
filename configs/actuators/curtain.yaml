esphome:
  name: stepper-a4988
  friendly_name: Curtain Controller

deep_sleep:
  id: deep_sleep_control

esp32:
  variant: esp32c3
  framework:
   type: esp-idf
logger:
  level: DEBUG

# 时间同步配置（用于定时休眠）
time:
  - platform: sntp
    id: homeassistant_time
    timezone: Asia/Shanghai
    servers:
      - 0.pool.ntp.org
      - 1.pool.ntp.org
      - 2.pool.ntp.org

    on_time:
      - hours: 22
        minutes: 0
        seconds: 0
        then:
          - logger.log: "Entering night deep sleep"
          - deep_sleep.enter:
              id: deep_sleep_control
              sleep_duration: 10h

api:

ota:
  platform: esphome

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

# 全局变量用于存储位置到Flash
globals:
  - id: custom_steps
    type: int
    restore_value: true
    initial_value: '1000'
# -------------------- 步进电机本体 --------------------
stepper:
  - platform: a4988
    id: curtain_motor
    step_pin: GPIO4            # ← STEP
    dir_pin:                   # ← DIR（高/低决定方向）
      number: GPIO5
      inverted: true           # 添加此行以反转旋转方向
    sleep_pin:                 # ← A4988的SLEEP pin（低电平有效）
      number: GPIO3
      inverted: true
    max_speed: 250 steps/s     # 根据文档建议，大多数步进电机不能超过250 steps/s
    acceleration: 800 steps/s^2
    deceleration: 800 steps/s^2
  

# -------------------- 控制UI（HA里会出现实体） --------------------
button:
  - platform: template
    name: "Curtain Stop"
    on_press:
      then:
        # ESPHome stepper没有stop action，通过设置目标位置为当前位置来停止
        - stepper.set_target:
            id: curtain_motor
            target: !lambda "return id(curtain_motor).current_position;"


  # 自定义步数旋转 - 正向
  - platform: template
    name: "Curtain Open (Custom Steps)"
    icon: "mdi:rotate-right"
    on_press:
      then:
        - stepper.report_position:  # 重置为0以便相对移动
            id: curtain_motor
            position: 0
        - stepper.set_target:
            id: curtain_motor
            target: !lambda "return id(custom_steps);"  # 使用自定义步数，正向
        - logger.log:
            format: "Moving forward %d steps"
            args: ['id(custom_steps)']

  # 自定义步数旋转 - 反向
  - platform: template
    name: "Curtain Close (Custom Steps)"
    icon: "mdi:rotate-left"
    on_press:
      then:
        - stepper.report_position:  # 重置为0以便相对移动
            id: curtain_motor
            position: 0
        - stepper.set_target:
            id: curtain_motor
            target: !lambda "return -id(custom_steps);"  # 使用自定义步数，反向
        - logger.log:
            format: "Moving backward %d steps"
            args: ['id(custom_steps)']


number:
  # 自定义步数配置
  - platform: template
    name: "Custom Steps"
    id: custom_steps_config
    min_value: 1
    max_value: 10000  # 最多10000步
    step: 100
    mode: box
    icon: "mdi:counter"
    lambda: "return id(custom_steps);"
    set_action:
      then:
        - globals.set:
            id: custom_steps
            value: !lambda "return (int) x;"
        - logger.log:
            format: "Custom steps set to: %d"
            args: ['(int)x']

